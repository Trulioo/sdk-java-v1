/*
 * OnlineID.NormalizedAPI
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.trulioo.normalizedapi.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 *
 */
@ApiModel(description = "")
public class Document {
    @SerializedName("DocumentFrontImage")
    private String documentFrontImage = null;

    @SerializedName("DocumentBackImage")
    private String documentBackImage = null;

    @SerializedName("LivePhoto")
    private String livePhoto = null;

    @SerializedName("DocumentType")
    private String documentType = null;

    public Document documentFrontImage(String documentFrontImage) {
        this.documentFrontImage = documentFrontImage;
        return this;
    }

    /**
     * Front of the document
     *
     * @return documentFrontImage
     **/
    @ApiModelProperty(value = "Front of the document")
    public String getDocumentFrontImage() {
        return documentFrontImage;
    }

    public void setDocumentFrontImage(String documentFrontImage) {
        this.documentFrontImage = documentFrontImage;
    }

    public Document documentBackImage(String documentBackImage) {
        this.documentBackImage = documentBackImage;
        return this;
    }

    /**
     * Back of the document
     *
     * @return documentBackImage
     **/
    @ApiModelProperty(value = "Back of the document")
    public String getDocumentBackImage() {
        return documentBackImage;
    }

    public void setDocumentBackImage(String documentBackImage) {
        this.documentBackImage = documentBackImage;
    }

    public Document livePhoto(String livePhoto) {
        this.livePhoto = livePhoto;
        return this;
    }

    /**
     * Selfie image
     *
     * @return livePhoto
     **/
    @ApiModelProperty(value = "Selfie image")
    public String getLivePhoto() {
        return livePhoto;
    }

    public void setLivePhoto(String livePhoto) {
        this.livePhoto = livePhoto;
    }

    public Document documentType(String documentType) {
        this.documentType = documentType;
        return this;
    }

    /**
     * Document type
     *
     * @return documentType
     **/
    @ApiModelProperty(value = "Document type")
    public String getDocumentType() {
        return documentType;
    }

    public void setDocumentType(String documentType) {
        this.documentType = documentType;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Document)) return false;

        Document document = (Document) o;

        if (getDocumentFrontImage() != null ? !getDocumentFrontImage().equals(document.getDocumentFrontImage()) : document.getDocumentFrontImage() != null)
            return false;
        if (getDocumentBackImage() != null ? !getDocumentBackImage().equals(document.getDocumentBackImage()) : document.getDocumentBackImage() != null)
            return false;
        if (getLivePhoto() != null ? !getLivePhoto().equals(document.getLivePhoto()) : document.getLivePhoto() != null)
            return false;
        if (getDocumentType() != null ? !getDocumentType().equals(document.getDocumentType()) : document.getDocumentType() != null)
            return false;

        return true;
    }

    @Override
    public int hashCode() {
        int result = getDocumentFrontImage() != null ? getDocumentFrontImage().hashCode() : 0;
        result = 31 * result + (getDocumentBackImage() != null ? getDocumentBackImage().hashCode() : 0);
        result = 31 * result + (getLivePhoto() != null ? getLivePhoto().hashCode() : 0);
        result = 31 * result + (getDocumentType() != null ? getDocumentType().hashCode() : 0);
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Document {\n");

        sb.append("    documentFrontImage: ").append(toIndentedString(documentFrontImage)).append("\n");
        sb.append("    documentBackImage: ").append(toIndentedString(documentBackImage)).append("\n");
        sb.append("    livePhoto: ").append(toIndentedString(livePhoto)).append("\n");
        sb.append("    documentType: ").append(toIndentedString(documentType)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

