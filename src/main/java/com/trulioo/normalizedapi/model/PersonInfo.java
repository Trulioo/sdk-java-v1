/*
 * OnlineID.NormalizedAPI
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.trulioo.normalizedapi.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.trulioo.normalizedapi.model.PersonInfoAdditionalFields;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Personal Information
 */
@ApiModel(description = "Personal Information")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-09-25T15:36:47.107-07:00")
public class PersonInfo {
  @SerializedName("FirstGivenName")
  private String firstGivenName = null;

  @SerializedName("MiddleName")
  private String middleName = null;

  @SerializedName("FirstSurName")
  private String firstSurName = null;

  @SerializedName("SecondSurname")
  private String secondSurname = null;

  @SerializedName("ISOLatin1Name")
  private String isOLatin1Name = null;

  @SerializedName("DayOfBirth")
  private Integer dayOfBirth = null;

  @SerializedName("MonthOfBirth")
  private Integer monthOfBirth = null;

  @SerializedName("YearOfBirth")
  private Integer yearOfBirth = null;

  @SerializedName("MinimumAge")
  private Integer minimumAge = null;

  @SerializedName("Gender")
  private String gender = null;

  @SerializedName("AdditionalFields")
  private PersonInfoAdditionalFields additionalFields = null;

  public PersonInfo firstGivenName(String firstGivenName) {
    this.firstGivenName = firstGivenName;
    return this;
  }

   /**
   * First name of the individual to be verified
   * @return firstGivenName
  **/
  @ApiModelProperty(value = "First name of the individual to be verified")
  public String getFirstGivenName() {
    return firstGivenName;
  }

  public void setFirstGivenName(String firstGivenName) {
    this.firstGivenName = firstGivenName;
  }

  public PersonInfo middleName(String middleName) {
    this.middleName = middleName;
    return this;
  }

   /**
   * Second given name of the individual to be verified
   * @return middleName
  **/
  @ApiModelProperty(value = "Second given name of the individual to be verified")
  public String getMiddleName() {
    return middleName;
  }

  public void setMiddleName(String middleName) {
    this.middleName = middleName;
  }

  public PersonInfo firstSurName(String firstSurName) {
    this.firstSurName = firstSurName;
    return this;
  }

   /**
   * First (paternal) family name of the individual to be verified
   * @return firstSurName
  **/
  @ApiModelProperty(value = "First (paternal) family name of the individual to be verified")
  public String getFirstSurName() {
    return firstSurName;
  }

  public void setFirstSurName(String firstSurName) {
    this.firstSurName = firstSurName;
  }

  public PersonInfo secondSurname(String secondSurname) {
    this.secondSurname = secondSurname;
    return this;
  }

   /**
   * second family name of the individual to be verified
   * @return secondSurname
  **/
  @ApiModelProperty(value = "second family name of the individual to be verified")
  public String getSecondSurname() {
    return secondSurname;
  }

  public void setSecondSurname(String secondSurname) {
    this.secondSurname = secondSurname;
  }

  public PersonInfo isOLatin1Name(String isOLatin1Name) {
    this.isOLatin1Name = isOLatin1Name;
    return this;
  }

   /**
   * Enter full name in ISO Latin-1 character set
   * @return isOLatin1Name
  **/
  @ApiModelProperty(value = "Enter full name in ISO Latin-1 character set")
  public String getIsOLatin1Name() {
    return isOLatin1Name;
  }

  public void setIsOLatin1Name(String isOLatin1Name) {
    this.isOLatin1Name = isOLatin1Name;
  }

  public PersonInfo dayOfBirth(Integer dayOfBirth) {
    this.dayOfBirth = dayOfBirth;
    return this;
  }

   /**
   * Day of birth date (i.e. 23 for a date of birth of 23/11/1975)
   * @return dayOfBirth
  **/
  @ApiModelProperty(value = "Day of birth date (i.e. 23 for a date of birth of 23/11/1975)")
  public Integer getDayOfBirth() {
    return dayOfBirth;
  }

  public void setDayOfBirth(Integer dayOfBirth) {
    this.dayOfBirth = dayOfBirth;
  }

  public PersonInfo monthOfBirth(Integer monthOfBirth) {
    this.monthOfBirth = monthOfBirth;
    return this;
  }

   /**
   * Month of birth date (i.e. 11 for a date of birth of 23/11/1975)
   * @return monthOfBirth
  **/
  @ApiModelProperty(value = "Month of birth date (i.e. 11 for a date of birth of 23/11/1975)")
  public Integer getMonthOfBirth() {
    return monthOfBirth;
  }

  public void setMonthOfBirth(Integer monthOfBirth) {
    this.monthOfBirth = monthOfBirth;
  }

  public PersonInfo yearOfBirth(Integer yearOfBirth) {
    this.yearOfBirth = yearOfBirth;
    return this;
  }

   /**
   * Year of birth date (i.e. 1975 for a date of birth of 23/11/1975)
   * @return yearOfBirth
  **/
  @ApiModelProperty(value = "Year of birth date (i.e. 1975 for a date of birth of 23/11/1975)")
  public Integer getYearOfBirth() {
    return yearOfBirth;
  }

  public void setYearOfBirth(Integer yearOfBirth) {
    this.yearOfBirth = yearOfBirth;
  }

  public PersonInfo minimumAge(Integer minimumAge) {
    this.minimumAge = minimumAge;
    return this;
  }

   /**
   * Minimum permitted age of the individual
   * @return minimumAge
  **/
  @ApiModelProperty(value = "Minimum permitted age of the individual")
  public Integer getMinimumAge() {
    return minimumAge;
  }

  public void setMinimumAge(Integer minimumAge) {
    this.minimumAge = minimumAge;
  }

  public PersonInfo gender(String gender) {
    this.gender = gender;
    return this;
  }

   /**
   * Single character M / F (M &#x3D; Male, F &#x3D; Female)
   * @return gender
  **/
  @ApiModelProperty(value = "Single character M / F (M = Male, F = Female)")
  public String getGender() {
    return gender;
  }

  public void setGender(String gender) {
    this.gender = gender;
  }

  public PersonInfo additionalFields(PersonInfoAdditionalFields additionalFields) {
    this.additionalFields = additionalFields;
    return this;
  }

   /**
   * 
   * @return additionalFields
  **/
  @ApiModelProperty(value = "")
  public PersonInfoAdditionalFields getAdditionalFields() {
    return additionalFields;
  }

  public void setAdditionalFields(PersonInfoAdditionalFields additionalFields) {
    this.additionalFields = additionalFields;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PersonInfo personInfo = (PersonInfo) o;
    return Objects.equals(this.firstGivenName, personInfo.firstGivenName) &&
        Objects.equals(this.middleName, personInfo.middleName) &&
        Objects.equals(this.firstSurName, personInfo.firstSurName) &&
        Objects.equals(this.secondSurname, personInfo.secondSurname) &&
        Objects.equals(this.isOLatin1Name, personInfo.isOLatin1Name) &&
        Objects.equals(this.dayOfBirth, personInfo.dayOfBirth) &&
        Objects.equals(this.monthOfBirth, personInfo.monthOfBirth) &&
        Objects.equals(this.yearOfBirth, personInfo.yearOfBirth) &&
        Objects.equals(this.minimumAge, personInfo.minimumAge) &&
        Objects.equals(this.gender, personInfo.gender) &&
        Objects.equals(this.additionalFields, personInfo.additionalFields);
  }

  @Override
  public int hashCode() {
    return Objects.hash(firstGivenName, middleName, firstSurName, secondSurname, isOLatin1Name, dayOfBirth, monthOfBirth, yearOfBirth, minimumAge, gender, additionalFields);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PersonInfo {\n");
    
    sb.append("    firstGivenName: ").append(toIndentedString(firstGivenName)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    firstSurName: ").append(toIndentedString(firstSurName)).append("\n");
    sb.append("    secondSurname: ").append(toIndentedString(secondSurname)).append("\n");
    sb.append("    isOLatin1Name: ").append(toIndentedString(isOLatin1Name)).append("\n");
    sb.append("    dayOfBirth: ").append(toIndentedString(dayOfBirth)).append("\n");
    sb.append("    monthOfBirth: ").append(toIndentedString(monthOfBirth)).append("\n");
    sb.append("    yearOfBirth: ").append(toIndentedString(yearOfBirth)).append("\n");
    sb.append("    minimumAge: ").append(toIndentedString(minimumAge)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    additionalFields: ").append(toIndentedString(additionalFields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

